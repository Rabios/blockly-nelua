// Do not edit this file; automatically generated by Rabia Alhaffar XD

/* eslint-disable */
;(function(root, factory) {
  if (typeof define === 'function' && define.amd) { // AMD
    define(['./blockly_compressed.js'], factory);
  } else if (typeof exports === 'object') { // Node.js
    module.exports = factory(require('./blockly_compressed.js'));
  } else { // Browser
    root.Blockly.Nelua = factory(root.Blockly);
  }
}(this, function(Blockly) {
  'use strict';
  // nelua.js
  Blockly.Nelua=new Blockly.Generator("Nelua"),Blockly.Nelua.addReservedWords("_,__inext,assert,bit,colors,colours,coroutine,disk,dofile,error,fs,fetfenv,getmetatable,gps,help,io,ipairs,keys,loadfile,loadstring,math,native,next,os,paintutils,pairs,parallel,pcall,peripheral,print,printError,rawequal,rawget,rawset,read,rednet,redstone,rs,select,setfenv,setmetatable,sleep,string,term,textutils,tonumber,tostring,turtle,type,unpack,vector,hashmap,write,xpcall,_VERSION,__indext,HTTP,and,break,do,else,elseif,end,false,for,function,if,in,local,nil,not,or,repeat,return,then,true,until,while,add,sub,mul,div,mod,pow,unm,concat,len,eq,lt,le,index,newindex,call,assert,collectgarbage,dofile,error,_G,getmetatable,inpairs,load,loadfile,next,pairs,pcall,print,rawequal,rawget,rawlen,rawset,select,setmetatable,tonumber,tostring,type,_VERSION,xpcall,require,package,string,vector,hashmap,math,bit32,io,file,os,debug"),Blockly.Nelua.ORDER_ATOMIC=0,Blockly.Nelua.ORDER_HIGH=1,Blockly.Nelua.ORDER_EXPONENTIATION=2,Blockly.Nelua.ORDER_UNARY=3,Blockly.Nelua.ORDER_MULTIPLICATIVE=4,Blockly.Nelua.ORDER_ADDITIVE=5,Blockly.Nelua.ORDER_CONCATENATION=6,Blockly.Nelua.ORDER_RELATIONAL=7,Blockly.Nelua.ORDER_AND=8,Blockly.Nelua.ORDER_OR=9,Blockly.Nelua.ORDER_NONE=99,Blockly.Nelua.isInitialized=!1,Blockly.Nelua.init=function(e){Object.getPrototypeOf(this).init.call(this),this.nameDB_?this.nameDB_.reset():this.nameDB_=new Blockly.Names(this.RESERVED_WORDS_),this.nameDB_.setVariableMap(e.getVariableMap()),this.nameDB_.populateVariables(e),this.nameDB_.populateProcedures(e),this.isInitialized=!0},Blockly.Nelua.finish=function(e){e=e&&this.prefixLines(e,"");var t=Blockly.utils.object.values(this.definitions_);return e=Object.getPrototypeOf(this).finish.call(this,e),this.isInitialized=!1,this.nameDB_.reset(),'require "string"\nrequire "math"\nrequire "vector"\nrequire "io"\n\n'+t.join("\n\n")+"\n"+e},Blockly.Nelua.scrubNakedValue=function(e){return"local _ = "+e+"\n"},Blockly.Nelua.quote_=function(e){return"'"+(e=e.replace(/\\/g,"\\\\").replace(/\n/g,"\\\n").replace(/'/g,"\\'"))+"'"},Blockly.Nelua.multiline_quote_=function(e){return e.split(/\n/g).map(this.quote_).join(" .. '\\n' ..\n")},Blockly.Nelua.scrub_=function(e,t,l){var i="";if(!e.outputConnection||!e.outputConnection.targetConnection){var n=e.getCommentText();n&&(n=Blockly.utils.string.wrap(n,this.COMMENT_WRAP-3),i+=this.prefixLines(n,"-- ")+"\n");for(var a,r=0;r<e.inputList.length;r++)e.inputList[r].type!=Blockly.inputTypes.VALUE||(a=e.inputList[r].connection.targetBlock())&&(n=this.allNestedComments(a))&&(i+=this.prefixLines(n,"-- "))}var o=e.nextConnection&&e.nextConnection.targetBlock();return i+t+(l?"":this.blockToCode(o))};
  
  // nelua/variables.js
  Blockly.Nelua.variables_get=function(l){return[Blockly.Nelua.nameDB_.getName(l.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME),Blockly.Nelua.ORDER_ATOMIC]},Blockly.Nelua.variables_set=function(l){var e=Blockly.Nelua.valueToCode(l,"VALUE",Blockly.Nelua.ORDER_NONE)||"0";return"local "+Blockly.Nelua.nameDB_.getName(l.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME)+" = "+e+"\n"};
  
  // nelua/variables_dynamic.js
  Blockly.Nelua.variables_get_dynamic=Blockly.Nelua.variables_get,Blockly.Nelua.variables_set_dynamic=Blockly.Nelua.variables_set;
  
  // nelua/loops.js
  Blockly.Nelua.CONTINUE_STATEMENT="goto continue\n",Blockly.Nelua.addContinueLabel_=function(l){return-1!=l.indexOf(Blockly.Nelua.CONTINUE_STATEMENT)?l+Blockly.Nelua.INDENT+"::continue::\n":l},Blockly.Nelua.controls_repeat_ext=function(l){var e;e=l.getField("TIMES")?String(Number(l.getFieldValue("TIMES"))):Blockly.Nelua.valueToCode(l,"TIMES",Blockly.Nelua.ORDER_NONE)||"0",e=Blockly.isNumber(e)?parseInt(e,10):"math.floor("+e+")";var o=Blockly.Nelua.statementToCode(l,"DO"),o=Blockly.Nelua.addLoopTrap(o,l);return o=Blockly.Nelua.addContinueLabel_(o),"for "+Blockly.Nelua.nameDB_.getDistinctName("count",Blockly.VARIABLE_CATEGORY_NAME)+" = 0, "+(e-1)+" do\n"+o+"end\n"},Blockly.Nelua.controls_repeat=Blockly.Nelua.controls_repeat_ext,Blockly.Nelua.controls_whileUntil=function(l){var e="UNTIL"==l.getFieldValue("MODE"),o=Blockly.Nelua.valueToCode(l,"BOOL",e?Blockly.Nelua.ORDER_UNARY:Blockly.Nelua.ORDER_NONE)||"false",a=Blockly.Nelua.statementToCode(l,"DO"),a=Blockly.Nelua.addLoopTrap(a,l);return e&&(o="not "+o),"while "+o+" do\n"+Blockly.Nelua.addContinueLabel_(a)+"end\n"},Blockly.Nelua.controls_for=function(l){var e=Blockly.Nelua.nameDB_.getName(l.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME),o=Blockly.Nelua.valueToCode(l,"FROM",Blockly.Nelua.ORDER_NONE)||"0",a=Blockly.Nelua.valueToCode(l,"TO",Blockly.Nelua.ORDER_NONE)||"0",N=Blockly.Nelua.valueToCode(l,"BY",Blockly.Nelua.ORDER_NONE)||"1",u=Blockly.Nelua.statementToCode(l,"DO"),u=Blockly.Nelua.addLoopTrap(u,l);u=Blockly.Nelua.addContinueLabel_(u);var n,l="";return Blockly.isNumber(o)&&Blockly.isNumber(a)&&Blockly.isNumber(N)?n=(Number(o)<=Number(a)?"":"-")+Math.abs(Number(N)):(l="",l+=(n=Blockly.Nelua.nameDB_.getDistinctName(e+"_inc",Blockly.VARIABLE_CATEGORY_NAME))+" = ",Blockly.isNumber(N)?l+=Math.abs(N)+"\n":l+="math.abs("+N+")\n",l+="if ("+o+") > ("+a+") then\n",l+=Blockly.Nelua.INDENT+n+" = -"+n+"\n",l+="end\n"),l+="for "+e+" = "+o+", "+a+", "+n,l+=" do\n"+u+"end\n"},Blockly.Nelua.controls_forEach=function(l){var e=Blockly.Nelua.nameDB_.getName(l.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME),o=Blockly.Nelua.valueToCode(l,"LIST",Blockly.Nelua.ORDER_NONE)||"#[[{}]]",a=Blockly.Nelua.statementToCode(l,"DO"),a=Blockly.Nelua.addLoopTrap(a,l);return"for _, "+e+" in ipairs("+o+") do \n"+Blockly.Nelua.addContinueLabel_(a)+"end\n"},Blockly.Nelua.controls_flow_statements=function(l){var e,o="";switch(Blockly.Nelua.STATEMENT_PREFIX&&(o+=Blockly.Nelua.injectId(Blockly.Nelua.STATEMENT_PREFIX,l)),Blockly.Nelua.STATEMENT_SUFFIX&&(o+=Blockly.Nelua.injectId(Blockly.Nelua.STATEMENT_SUFFIX,l)),!Blockly.Nelua.STATEMENT_PREFIX||(e=Blockly.Constants.Loops.CONTROL_FLOW_IN_LOOP_CHECK_MIXIN.getSurroundLoop(l))&&!e.suppressPrefixSuffix&&(o+=Blockly.Nelua.injectId(Blockly.Nelua.STATEMENT_PREFIX,e)),l.getFieldValue("FLOW")){case"BREAK":return o+"break\n";case"CONTINUE":return o+Blockly.Nelua.CONTINUE_STATEMENT}throw Error("Unknown flow statement.")};
  
  // nelua/logic.js
  Blockly.Nelua.controls_if=function(l){var e,o,u=0,a="";for(Blockly.Nelua.STATEMENT_PREFIX&&(a+=Blockly.Nelua.injectId(Blockly.Nelua.STATEMENT_PREFIX,l));o=Blockly.Nelua.valueToCode(l,"IF"+u,Blockly.Nelua.ORDER_NONE)||"false",e=Blockly.Nelua.statementToCode(l,"DO"+u),Blockly.Nelua.STATEMENT_SUFFIX&&(e=Blockly.Nelua.prefixLines(Blockly.Nelua.injectId(Blockly.Nelua.STATEMENT_SUFFIX,l),Blockly.Nelua.INDENT)+e),a+=(0<u?"else":"")+"if "+o+" then\n"+e,++u,l.getInput("IF"+u););return(l.getInput("ELSE")||Blockly.Nelua.STATEMENT_SUFFIX)&&(e=Blockly.Nelua.statementToCode(l,"ELSE"),Blockly.Nelua.STATEMENT_SUFFIX&&(e=Blockly.Nelua.prefixLines(Blockly.Nelua.injectId(Blockly.Nelua.STATEMENT_SUFFIX,l),Blockly.Nelua.INDENT)+e),a+="else\n"+e),a+"end\n"},Blockly.Nelua.controls_ifelse=Blockly.Nelua.controls_if,Blockly.Nelua.logic_compare=function(l){var e={EQ:"==",NEQ:"~=",LT:"<",LTE:"<=",GT:">",GTE:">="}[l.getFieldValue("OP")];return[(Blockly.Nelua.valueToCode(l,"A",Blockly.Nelua.ORDER_RELATIONAL)||"0")+" "+e+" "+(Blockly.Nelua.valueToCode(l,"B",Blockly.Nelua.ORDER_RELATIONAL)||"0"),Blockly.Nelua.ORDER_RELATIONAL]},Blockly.Nelua.logic_operation=function(l){var e="AND"==l.getFieldValue("OP")?"and":"or",o="and"==e?Blockly.Nelua.ORDER_AND:Blockly.Nelua.ORDER_OR,u=Blockly.Nelua.valueToCode(l,"A",o),a=Blockly.Nelua.valueToCode(l,"B",o);return a=u||a?(l="and"==e?"true":"false",u=u||l,a||l):u="false",[u+" "+e+" "+a,o]},Blockly.Nelua.logic_negate=function(l){return["not "+(Blockly.Nelua.valueToCode(l,"BOOL",Blockly.Nelua.ORDER_UNARY)||"true"),Blockly.Nelua.ORDER_UNARY]},Blockly.Nelua.logic_boolean=function(l){return["TRUE"==l.getFieldValue("BOOL")?"true":"false",Blockly.Nelua.ORDER_ATOMIC]},Blockly.Nelua.logic_null=function(l){return["nil",Blockly.Nelua.ORDER_ATOMIC]},Blockly.Nelua.logic_ternary=function(l){return[(Blockly.Nelua.valueToCode(l,"IF",Blockly.Nelua.ORDER_AND)||"false")+" and "+(Blockly.Nelua.valueToCode(l,"THEN",Blockly.Nelua.ORDER_AND)||"nil")+" or "+(Blockly.Nelua.valueToCode(l,"ELSE",Blockly.Nelua.ORDER_OR)||"nil"),Blockly.Nelua.ORDER_OR]};
  
  // nelua/procedures.js
  Blockly.Nelua.procedures_defreturn=function(l){var e=Blockly.Nelua.nameDB_.getName(l.getFieldValue("NAME"),Blockly.PROCEDURE_CATEGORY_NAME),N="";Blockly.Nelua.STATEMENT_PREFIX&&(N+=Blockly.Nelua.injectId(Blockly.Nelua.STATEMENT_PREFIX,l)),Blockly.Nelua.STATEMENT_SUFFIX&&(N+=Blockly.Nelua.injectId(Blockly.Nelua.STATEMENT_SUFFIX,l)),N=N&&Blockly.Nelua.prefixLines(N,Blockly.Nelua.INDENT);var u="";Blockly.Nelua.INFINITE_LOOP_TRAP&&(u=Blockly.Nelua.prefixLines(Blockly.Nelua.injectId(Blockly.Nelua.INFINITE_LOOP_TRAP,l),Blockly.Nelua.INDENT));var o=Blockly.Nelua.statementToCode(l,"STACK"),a=Blockly.Nelua.valueToCode(l,"RETURN",Blockly.Nelua.ORDER_NONE)||"",c=o&&a?N:"";a?a=Blockly.Nelua.INDENT+"return "+a+"\n":o=o||"";for(var n=[],r=l.getVars(),B=0;B<r.length;B++)n[B]=Blockly.Nelua.nameDB_.getName(r[B],Blockly.VARIABLE_CATEGORY_NAME);a="local function "+e+"("+n.join(", ")+")\n"+N+u+o+c+a+"end\n",a=Blockly.Nelua.scrub_(l,a);return Blockly.Nelua.definitions_["%"+e]=a,null},Blockly.Nelua.procedures_defnoreturn=Blockly.Nelua.procedures_defreturn,Blockly.Nelua.procedures_callreturn=function(l){for(var e=Blockly.Nelua.nameDB_.getName(l.getFieldValue("NAME"),Blockly.PROCEDURE_CATEGORY_NAME),N=[],u=l.getVars(),o=0;o<u.length;o++)N[o]=Blockly.Nelua.valueToCode(l,"ARG"+o,Blockly.Nelua.ORDER_NONE)||"nil";return[e+"("+N.join(", ")+")",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.procedures_callnoreturn=function(l){return Blockly.Nelua.procedures_callreturn(l)[0]+"\n"},Blockly.Nelua.procedures_ifreturn=function(l){var e="if "+(Blockly.Nelua.valueToCode(l,"CONDITION",Blockly.Nelua.ORDER_NONE)||"false")+" then\n";return Blockly.Nelua.STATEMENT_SUFFIX&&(e+=Blockly.Nelua.prefixLines(Blockly.Nelua.injectId(Blockly.Nelua.STATEMENT_SUFFIX,l),Blockly.Nelua.INDENT)),l.hasReturnValue_?(l=Blockly.Nelua.valueToCode(l,"VALUE",Blockly.Nelua.ORDER_NONE)||"nil",e+=Blockly.Nelua.INDENT+"return "+l+"\n"):e+=Blockly.Nelua.INDENT+"return\n",e+="end\n"};
  
  // nelua/text.js
  Blockly.Nelua.text=function(e){return[Blockly.Nelua.quote_(e.getFieldValue("TEXT")),Blockly.Nelua.ORDER_ATOMIC]},Blockly.Nelua.text_multiline=function(e){var l=Blockly.Nelua.multiline_quote_(e.getFieldValue("TEXT")),e=-1!=l.indexOf("..")?Blockly.Nelua.ORDER_CONCATENATION:Blockly.Nelua.ORDER_ATOMIC;return[l,e]},Blockly.Nelua.text_join=function(e){if(0==e.itemCount_)return["''",Blockly.Nelua.ORDER_ATOMIC];if(1==e.itemCount_)return["tostring("+(Blockly.Nelua.valueToCode(e,"ADD0",Blockly.Nelua.ORDER_NONE)||"''")+")",Blockly.Nelua.ORDER_HIGH];if(2==e.itemCount_)return[(Blockly.Nelua.valueToCode(e,"ADD0",Blockly.Nelua.ORDER_CONCATENATION)||"''")+" .. "+(Blockly.Nelua.valueToCode(e,"ADD1",Blockly.Nelua.ORDER_CONCATENATION)||"''"),Blockly.Nelua.ORDER_CONCATENATION];for(var l=[],t=0;t<e.itemCount_;t++)l[t]=Blockly.Nelua.valueToCode(e,"ADD"+t,Blockly.Nelua.ORDER_NONE)||"''";return["##[[table.concat({"+l.join(", ")+"})]]",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.text_append=function(e){var l=Blockly.Nelua.nameDB_.getName(e.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME);return l+" = "+l+" .. "+(Blockly.Nelua.valueToCode(e,"TEXT",Blockly.Nelua.ORDER_CONCATENATION)||"''")+"\n"},Blockly.Nelua.text_length=function(e){return["#"+(Blockly.Nelua.valueToCode(e,"VALUE",Blockly.Nelua.ORDER_UNARY)||"''"),Blockly.Nelua.ORDER_UNARY]},Blockly.Nelua.text_isEmpty=function(e){return["#"+(Blockly.Nelua.valueToCode(e,"VALUE",Blockly.Nelua.ORDER_UNARY)||"''")+" == 0",Blockly.Nelua.ORDER_RELATIONAL]},Blockly.Nelua.text_indexOf=function(e){var l=Blockly.Nelua.valueToCode(e,"FIND",Blockly.Nelua.ORDER_NONE)||"''",t=Blockly.Nelua.valueToCode(e,"VALUE",Blockly.Nelua.ORDER_NONE)||"''";return[("FIRST"==e.getFieldValue("END")?Blockly.Nelua.provideFunction_("firstIndexOf",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(str: string, substr: string): uinteger","  local i: uinteger = string.find(str, substr, 1, true)","  if i == nil then","    return 0","  else","    return i","  end","end"]):Blockly.Nelua.provideFunction_("lastIndexOf",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(str: string, substr: string): uinteger","  local i: uinteger = string.find(string.reverse(str), string.reverse(substr), 1, true)","  if i then","    return #str + 2 - i - #substr","  end","  return 0","end"]))+"("+t+", "+l+")",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.text_charAt=function(e){var l=e.getFieldValue("WHERE")||"FROM_START",t="FROM_END"==l?Blockly.Nelua.ORDER_UNARY:Blockly.Nelua.ORDER_NONE,t=Blockly.Nelua.valueToCode(e,"AT",t)||"1",e=Blockly.Nelua.valueToCode(e,"VALUE",Blockly.Nelua.ORDER_NONE)||"''";if("RANDOM"==l)var o=Blockly.Nelua.provideFunction_("text_random_letter",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(str: string): string","  local index: uinteger = math.random(string.len(str))","  return string.sub(str, index, index)","end"])+"("+e+")";else{if("FIRST"==l)var u="1";else if("LAST"==l)u="-1";else if("FROM_START"==l)u=t;else{if("FROM_END"!=l)throw Error("Unhandled option (text_charAt).");u="-"+t}o=u.match(/^-?\w*$/)?"string.sub("+e+", "+u+", "+u+")":Blockly.Nelua.provideFunction_("text_char_at",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(str: string, index: uinteger): string","  return string.sub(str, index, index)","end"])+"("+e+", "+u+")"}return[o,Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.text_getSubstring=function(e){var l=Blockly.Nelua.valueToCode(e,"STRING",Blockly.Nelua.ORDER_NONE)||"''",t=e.getFieldValue("WHERE1"),o="FROM_END"==t?Blockly.Nelua.ORDER_UNARY:Blockly.Nelua.ORDER_NONE,o=Blockly.Nelua.valueToCode(e,"AT1",o)||"0";if("FIRST"==t)var u=0;else if("FROM_START"==t)u=o;else{if("FROM_END"!=t)throw Error("Unhandled option (text_getSubstring)");u="-"+o}t=e.getFieldValue("WHERE2"),o="FROM_END"==t?Blockly.Nelua.ORDER_UNARY:Blockly.Nelua.ORDER_NONE,o=Blockly.Nelua.valueToCode(e,"AT2",o)||"1";if("LAST"==t)var n=-1;else if("FROM_START"==t)n=o;else{if("FROM_END"!=t)throw Error("Unhandled option (text_getSubstring)");n="-"+o}return["string.sub("+l+", "+u+", "+n+")",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.text_changeCase=function(e){var l,t=e.getFieldValue("CASE"),e=Blockly.Nelua.valueToCode(e,"TEXT",Blockly.Nelua.ORDER_NONE)||"''";return"UPPERCASE"==t?l="string.upper":"LOWERCASE"==t?l="string.lower":"TITLECASE"==t&&(l=Blockly.Nelua.provideFunction_("text_titlecase",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(str: string): string","  local buf: vector(string) = {}","  local inWord: boolean = false",'  local res: string = ""',"  for i = 0, #str do","    local c: string = string.sub(str, i, i)","    if inWord then","      buf[#buf + 1] = string.lower(c)",'      if string.find(c, "%s") then',"        inWord = false","      end","    else","      buf[#buf + 1] = string.upper(c)","      inWord = true","    end","  end","  for i = 0, #buf - 1 do","    res = res .. buf[i]","  end","  return res","end"])),[l+"("+e+")",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.text_trim=function(e){var l={LEFT:"^%s*(,-)",RIGHT:"(.-)%s*$",BOTH:"^%s*(.-)%s*$"}[e.getFieldValue("MODE")];return["string.gsub("+(Blockly.Nelua.valueToCode(e,"TEXT",Blockly.Nelua.ORDER_NONE)||"''")+', "'+l+'", "%1")',Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.text_print=function(e){return"print("+(Blockly.Nelua.valueToCode(e,"TEXT",Blockly.Nelua.ORDER_NONE)||"''")+")\n"},Blockly.Nelua.text_prompt_ext=function(e){l=e.getField("TEXT")?Blockly.Nelua.quote_(e.getFieldValue("TEXT")):Blockly.Nelua.valueToCode(e,"TEXT",Blockly.Nelua.ORDER_NONE)||"''";var l=Blockly.Nelua.provideFunction_("text_prompt",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(msg: string): string","  io.write(msg)","  io.flush()","  return io.read()","end"])+"("+l+")";return"NUMBER"==e.getFieldValue("TYPE")&&(l="tonumber("+l+", 10)"),[l,Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.text_prompt=Blockly.Nelua.text_prompt_ext,Blockly.Nelua.text_count=function(e){var l=Blockly.Nelua.valueToCode(e,"TEXT",Blockly.Nelua.ORDER_NONE)||"''",e=Blockly.Nelua.valueToCode(e,"SUB",Blockly.Nelua.ORDER_NONE)||"''";return[Blockly.Nelua.provideFunction_("text_count",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(haystack: auto, needle: auto): uinteger","  ## assert(haystack.type.is_vector)","  ## assert(needle.type.is_vector)","  if #needle == 0 then","    return #haystack","  end","  local i: uinteger = 0","  local count: uinteger = 0","  while true do","    i = string.find(haystack, needle, i, true)","    if i == nil then","      break","    end","    count = count + 1","    i = i + #needle","  end","  return count","end"])+"("+l+", "+e+")",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.text_replace=function(e){var l=Blockly.Nelua.valueToCode(e,"TEXT",Blockly.Nelua.ORDER_NONE)||"''",t=Blockly.Nelua.valueToCode(e,"FROM",Blockly.Nelua.ORDER_NONE)||"''",e=Blockly.Nelua.valueToCode(e,"TO",Blockly.Nelua.ORDER_NONE)||"''";return[Blockly.Nelua.provideFunction_("text_replace",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(haystack: auto, needle: auto, replacement: string): string","  ## assert(haystack.type.is_vector)","  ## assert(needle.type.is_vector)","  local buf: vector(string) = {}","  local i: uinteger = 0",'  local res: string = ""',"  while i <= #haystack do","    if string.sub(haystack, i, #needle - 1) == needle then","      for j = 0, #replacement do","        buf[#buf + 1] = string.sub(replacement, j, j))","      end","      i = i + #needle","    else","      buf[#buf + 1] = string.sub(haystack, i, i))","      i = i + 1","    end","  end","  for i = 0, #buf - 1 do","    res = res .. buf[i]","  end","  return res","end"])+"("+l+", "+t+", "+e+")",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.text_reverse=function(e){return["string.reverse("+(Blockly.Nelua.valueToCode(e,"TEXT",Blockly.Nelua.ORDER_NONE)||"''")+")",Blockly.Nelua.ORDER_HIGH]};
  
  // nelua/math.js
  Blockly.Nelua.math_number=function(e){e=Number(e.getFieldValue("NUM"));return[e,e<0?Blockly.Nelua.ORDER_UNARY:Blockly.Nelua.ORDER_ATOMIC]},Blockly.Nelua.math_arithmetic=function(e){var l={ADD:[" + ",Blockly.Nelua.ORDER_ADDITIVE],MINUS:[" - ",Blockly.Nelua.ORDER_ADDITIVE],MULTIPLY:[" * ",Blockly.Nelua.ORDER_MULTIPLICATIVE],DIVIDE:[" / ",Blockly.Nelua.ORDER_MULTIPLICATIVE],POWER:[" ^ ",Blockly.Nelua.ORDER_EXPONENTIATION]}[e.getFieldValue("OP")],t=l[0],l=l[1];return[(Blockly.Nelua.valueToCode(e,"A",l)||"0")+t+(Blockly.Nelua.valueToCode(e,"B",l)||"0"),l]},Blockly.Nelua.math_single=function(e){var l,t,a=e.getFieldValue("OP");if("NEG"==a)return["-"+(t=Blockly.Nelua.valueToCode(e,"NUM",Blockly.Nelua.ORDER_UNARY)||"0"),Blockly.Nelua.ORDER_UNARY];if("POW10"==a)return["10 ^ "+(t=Blockly.Nelua.valueToCode(e,"NUM",Blockly.Nelua.ORDER_EXPONENTIATION)||"0"),Blockly.Nelua.ORDER_EXPONENTIATION];switch(t="ROUND"==a?Blockly.Nelua.valueToCode(e,"NUM",Blockly.Nelua.ORDER_ADDITIVE)||"0":Blockly.Nelua.valueToCode(e,"NUM",Blockly.Nelua.ORDER_NONE)||"0",a){case"ABS":l="math.abs("+t+")";break;case"ROOT":l="math.sqrt("+t+")";break;case"LN":l="math.log("+t+")";break;case"LOG10":l="math.log("+t+", 10)";break;case"EXP":l="math.exp("+t+")";break;case"ROUND":l="math.floor("+t+" + .5)";break;case"ROUNDUP":l="math.ceil("+t+")";break;case"ROUNDDOWN":l="math.floor("+t+")";break;case"SIN":l="math.sin(math.rad("+t+"))";break;case"COS":l="math.cos(math.rad("+t+"))";break;case"TAN":l="math.tan(math.rad("+t+"))";break;case"ASIN":l="math.deg(math.asin("+t+"))";break;case"ACOS":l="math.deg(math.acos("+t+"))";break;case"ATAN":l="math.deg(math.atan("+t+"))";break;default:throw Error("Unknown math operator: "+a)}return[l,Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.math_constant=function(e){return{PI:["math.pi",Blockly.Nelua.ORDER_HIGH],E:["math.exp(1)",Blockly.Nelua.ORDER_HIGH],GOLDEN_RATIO:["(1 + math.sqrt(5)) / 2",Blockly.Nelua.ORDER_MULTIPLICATIVE],SQRT2:["math.sqrt(2)",Blockly.Nelua.ORDER_HIGH],SQRT1_2:["math.sqrt(1 / 2)",Blockly.Nelua.ORDER_HIGH],INFINITY:["math.huge",Blockly.Nelua.ORDER_HIGH]}[e.getFieldValue("CONSTANT")]},Blockly.Nelua.math_number_property=function(e){var l,t=Blockly.Nelua.valueToCode(e,"NUMBER_TO_CHECK",Blockly.Nelua.ORDER_MULTIPLICATIVE)||"0",a=e.getFieldValue("PROPERTY");if("PRIME"==a)return[l=Blockly.Nelua.provideFunction_("math_isPrime",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(n: number): number","  -- https://en.wikipedia.org/wiki/Primality_test#Naive_methods","  if n == 2 or n == 3 then","    return true","  end","  -- False if n is NaN, negative, is 1, or not whole.","  -- And false if n is divisible by 2 or 3.","  if not(n > 1) or n % 1 ~= 0 or n % 2 == 0 or n % 3 == 0 then","    return false","  end","  -- Check all the numbers of form 6k +/- 1, up to sqrt(n).","  for x = 6, math.sqrt(n) + 1.5, 6 do","    if n % (x - 1) == 0 or n % (x + 1) == 0 then","      return false","    end","  end","  return true","end"])+"("+t+")",Blockly.Nelua.ORDER_HIGH];switch(a){case"EVEN":l=t+" % 2 == 0";break;case"ODD":l=t+" % 2 == 1";break;case"WHOLE":l=t+" % 1 == 0";break;case"POSITIVE":l=t+" > 0";break;case"NEGATIVE":l=t+" < 0";break;case"DIVISIBLE_BY":var o=Blockly.Nelua.valueToCode(e,"DIVISOR",Blockly.Nelua.ORDER_MULTIPLICATIVE);if(!o||"0"==o)return["nil",Blockly.Nelua.ORDER_ATOMIC];l=t+" % "+o+" == 0"}return[l,Blockly.Nelua.ORDER_RELATIONAL]},Blockly.Nelua.math_change=function(e){var l=Blockly.Nelua.valueToCode(e,"DELTA",Blockly.Nelua.ORDER_ADDITIVE)||"0",e=Blockly.Nelua.nameDB_.getName(e.getFieldValue("VAR"),Blockly.VARIABLE_CATEGORY_NAME);return e+" = "+e+" + "+l+"\n"},Blockly.Nelua.math_round=Blockly.Nelua.math_single,Blockly.Nelua.math_trig=Blockly.Nelua.math_single,Blockly.Nelua.math_on_list=function(e){var l,t=e.getFieldValue("OP"),e=Blockly.Nelua.valueToCode(e,"LIST",Blockly.Nelua.ORDER_NONE)||"##[[{}]]";function a(){return Blockly.Nelua.provideFunction_("math_sum",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(t: auto): number","  assert(t.type.is_vector)","  local result: number = 0","  for _, v in ipairs(t) do","    result = result + v","  end","  return result","end"])}switch(t){case"SUM":l=a();break;case"MIN":l=Blockly.Nelua.provideFunction_("math_min",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(t: auto): number","  assert(t.type.is_vector)","  if #t == 0 then","    return 0","  end","  local result: number = math.huge","  for _, v in ipairs(t) do","    if v < result then","      result = v","    end","  end","  return result","end"]);break;case"AVERAGE":l=Blockly.Nelua.provideFunction_("math_average",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(t: auto): number","  assert(t.type.is_vector)","  if #t == 0 then","    return 0","  end","  return "+a()+"(t) / #t","end"]);break;case"MAX":l=Blockly.Nelua.provideFunction_("math_max",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(t: auto): number","  assert(t.type.is_vector)","  if #t == 0 then","    return 0","  end","  local result: number = -math.huge","  for _, v in ipairs(t) do","    if v > result then","      result = v","    end","  end","  return result","end"]);break;case"MEDIAN":l=Blockly.Nelua.provideFunction_("math_median",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(t: auto): number","  local function partition(arr: auto, left: uinteger, right: uinteger, pivotIndex: uinteger): number","    assert(arr.type.is_vector)","    local pivotValue = arr[pivotIndex]","    arr[pivotIndex], arr[right] = arr[right], arr[pivotIndex]","    local storeIndex: uinteger = left","    for i = left - 1, right - 1 do","      if arr[i] <= pivotValue then","        arr[i], arr[storeIndex] = arr[storeIndex], arr[i]","        storeIndex = storeIndex + 1","      end","      arr[storeIndex], arr[right] = arr[right], arr[storeIndex]","    end","    return storeIndex","  end","  local function quicksort(arr: auto, left: uinteger, right: uinteger)","    assert(arr.type.is_vector)","    if right > left then","      quicksort(arr, left, pivotNewIndex - 1)","      quicksort(arr, pivotNewIndex, right)","    end","  end","  assert(t.type.is_vector)","  -- Source: http://lua-users.org/wiki/SimpleStats","  if #t == 0 then","    return 0","  end","  local temp: #[t.type] = {}","  for _, v in ipairs(t) do",'    if type(v) == "number" then',"      temp[#temp + 1] = v","    end","  end","  quicksort(temp, 1, #temp)","  if #temp % 2 == 0 then","    return (temp[#temp/2] + temp[(#temp/2)+1]) / 2","  else","    return temp[math.ceil(#temp/2)]","  end","end"]);break;case"MODE":l=Blockly.Nelua.provideFunction_("math_modes",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(t: auto): #[t.type]","  assert(t.type.is_vector)","  -- Source: http://lua-users.org/wiki/SimpleStats","  local counts: #[t.type] = {}","  for _, v in ipairs(t) do","    if counts[v] == nil then","      counts[v] = 1","    else","      counts[v] = counts[v] + 1","    end","  end","  local biggestCount: uinteger = 0","  for _, v  in pairs(counts) do","    if v > biggestCount then","      biggestCount = v","    end","  end","  local temp: #[t.type] = {}","  for k, v in pairs(counts) do","    if v == biggestCount then","      temp[#temp + 1] = k","    end","  end","  return temp","end"]);break;case"STD_DEV":l=Blockly.Nelua.provideFunction_("math_standard_deviation",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(t: auto): number","  assert(t.type.is_vector)","  local m: number","  local vm: number","  local total: number","  local count: number","  local result: number","  m = #t == 0 and 0 or "+a()+"(t) / #t","  for _, v in ipairs(t) do","    if type(v) == 'number' then","      vm = v - m","      total = total + (vm * vm)","      count = count + 1","    end","  end","  result = math.sqrt(total / (count-1))","  return result","end"]);break;case"RANDOM":l=Blockly.Nelua.provideFunction_("math_random_list",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(t: auto)","  assert(t.type.is_vector)","  if #t == 0 then","    return nil","  end","  return t[math.random(#t)]","end"]);break;default:throw Error("Unknown operator: "+t)}return[l+"("+e+")",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.math_modulo=function(e){return[(Blockly.Nelua.valueToCode(e,"DIVIDEND",Blockly.Nelua.ORDER_MULTIPLICATIVE)||"0")+" % "+(Blockly.Nelua.valueToCode(e,"DIVISOR",Blockly.Nelua.ORDER_MULTIPLICATIVE)||"0"),Blockly.Nelua.ORDER_MULTIPLICATIVE]},Blockly.Nelua.math_constrain=function(e){return["math.min(math.max("+(Blockly.Nelua.valueToCode(e,"VALUE",Blockly.Nelua.ORDER_NONE)||"0")+", "+(Blockly.Nelua.valueToCode(e,"LOW",Blockly.Nelua.ORDER_NONE)||"-math.huge")+"), "+(Blockly.Nelua.valueToCode(e,"HIGH",Blockly.Nelua.ORDER_NONE)||"math.huge")+")",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.math_random_int=function(e){return["math.random("+(Blockly.Nelua.valueToCode(e,"FROM",Blockly.Nelua.ORDER_NONE)||"0")+", "+(Blockly.Nelua.valueToCode(e,"TO",Blockly.Nelua.ORDER_NONE)||"0")+")",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.math_random_float=function(e){return["math.random()",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.math_atan2=function(e){var l=Blockly.Nelua.valueToCode(e,"X",Blockly.Nelua.ORDER_NONE)||"0";return["math.deg(math.atan2("+(Blockly.Nelua.valueToCode(e,"Y",Blockly.Nelua.ORDER_NONE)||"0")+", "+l+"))",Blockly.Nelua.ORDER_HIGH]};
  
  // nelua/colour.js
  Blockly.Nelua.colour_picker=function(l){return[Blockly.Nelua.quote_(l.getFieldValue("COLOUR")),Blockly.Nelua.ORDER_ATOMIC]},Blockly.Nelua.colour_random=function(l){return['string.format("#%06x", math.random(0, 2^24 - 1))',Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.colour_rgb=function(l){return[Blockly.Nelua.provideFunction_("colour_rgb",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(r: uinteger, g: uinteger, b: uinteger): string","  r = math.floor(math.min(100, math.max(0, r)) * 2.55 + .5)","  g = math.floor(math.min(100, math.max(0, g)) * 2.55 + .5)","  b = math.floor(math.min(100, math.max(0, b)) * 2.55 + .5)",'  return string.format("#%02x%02x%02x", r, g, b)',"end"])+"("+(Blockly.Nelua.valueToCode(l,"RED",Blockly.Nelua.ORDER_NONE)||0)+", "+(Blockly.Nelua.valueToCode(l,"GREEN",Blockly.Nelua.ORDER_NONE)||0)+", "+(Blockly.Nelua.valueToCode(l,"BLUE",Blockly.Nelua.ORDER_NONE)||0)+")",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.colour_blend=function(l){return[Blockly.Nelua.provideFunction_("colour_blend",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(colour1: string, colour2: string, ratio: uinteger): string","  local r1: uinteger = tonumber(string.sub(colour1, 2, 3), 16)","  local r2: uinteger = tonumber(string.sub(colour2, 2, 3), 16)","  local g1: uinteger = tonumber(string.sub(colour1, 4, 5), 16)","  local g2: uinteger = tonumber(string.sub(colour2, 4, 5), 16)","  local b1: uinteger = tonumber(string.sub(colour1, 6, 7), 16)","  local b2: uinteger = tonumber(string.sub(colour2, 6, 7), 16)","  ratio = math.min(1, math.max(0, ratio))","  local r: uinteger = math.floor(r1 * (1 - ratio) + r2 * ratio + .5)","  local g: uinteger = math.floor(g1 * (1 - ratio) + g2 * ratio + .5)","  local b: uinteger = math.floor(b1 * (1 - ratio) + b2 * ratio + .5)",'  return string.format("#%02x%02x%02x", r, g, b)',"end"])+"("+(Blockly.Nelua.valueToCode(l,"COLOUR1",Blockly.Nelua.ORDER_NONE)||"'#000000'")+", "+(Blockly.Nelua.valueToCode(l,"COLOUR2",Blockly.Nelua.ORDER_NONE)||"'#000000'")+", "+(Blockly.Nelua.valueToCode(l,"RATIO",Blockly.Nelua.ORDER_NONE)||0)+")",Blockly.Nelua.ORDER_HIGH]};  
  
  // nelua/lists.js
  Blockly.Nelua.lists={},Blockly.Nelua.lists_create_empty=function(e){return["##[[{}]]",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.lists_create_with=function(e){for(var l=new Array(e.itemCount_),t=0;t<e.itemCount_;t++)l[t]=Blockly.Nelua.valueToCode(e,"ADD"+t,Blockly.Nelua.ORDER_NONE)||"None";return["##[[{"+l.join(", ")+"}]]",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.lists_repeat=function(e){return[Blockly.Nelua.provideFunction_("create_list_repeated",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(item: auto, count: uinteger): #[item.type]","  ## assert(item.type.is_vector)","  local t: #[item.type] = {}","  for i = 0, count - 1 do","    t[i] = item","  end","  return t","end"])+"("+(Blockly.Nelua.valueToCode(e,"ITEM",Blockly.Nelua.ORDER_NONE)||"None")+", "+(Blockly.Nelua.valueToCode(e,"NUM",Blockly.Nelua.ORDER_NONE)||"0")+")",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.lists_length=function(e){return["#"+(Blockly.Nelua.valueToCode(e,"VALUE",Blockly.Nelua.ORDER_UNARY)||"#[[{}]]"),Blockly.Nelua.ORDER_UNARY]},Blockly.Nelua.lists_isEmpty=function(e){return["#"+(Blockly.Nelua.valueToCode(e,"VALUE",Blockly.Nelua.ORDER_UNARY)||"#[[{}]]")+" == 0",Blockly.Nelua.ORDER_RELATIONAL]},Blockly.Nelua.lists_indexOf=function(e){var l=Blockly.Nelua.valueToCode(e,"FIND",Blockly.Nelua.ORDER_NONE)||"''",t=Blockly.Nelua.valueToCode(e,"VALUE",Blockly.Nelua.ORDER_NONE)||"#[[{}]]";return[("FIRST"==e.getFieldValue("END")?Blockly.Nelua.provideFunction_("first_index",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(t: auto, elem): uinteger","  ## assert(t.type.is_vector)","  for k, v in ipairs(t) do","    if v == elem then","      return k","    end","  end","  return 0","end"]):Blockly.Nelua.provideFunction_("last_index",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(t: auto, elem: auto): uinteger","  ## assert(t.type.is_vector)","  for i = #t - 1, 0, -1 do","    if t[i] == elem then","      return i","    end","  end","  return 0","end"]))+"("+t+", "+l+")",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.lists.getIndex_=function(e,l,t){return"FIRST"==l?"0":"FROM_END"==l?"#"+e+" - "+t+" - 1":"LAST"==l?"#"+e:"RANDOM"==l?"math.random(#"+e+")":t},Blockly.Nelua.lists_getIndex=function(e){var l=e.getFieldValue("MODE")||"GET",t=e.getFieldValue("WHERE")||"FROM_START",o=Blockly.Nelua.valueToCode(e,"VALUE",Blockly.Nelua.ORDER_HIGH)||"(##[[{}]])",a=Blockly.Nelua.lists.getIndex_;if("LAST"!=t&&"FROM_END"!=t&&"RANDOM"!=t||o.match(/^\w+$/)){var u="GET"==l&&"FROM_END"==t?Blockly.Nelua.ORDER_ADDITIVE:Blockly.Nelua.ORDER_NONE,r=Blockly.Nelua.valueToCode(e,"AT",u)||"1";if(r=a(o,t,r),"GET"==l)return[n=o+"["+r+"]",Blockly.Nelua.ORDER_HIGH];n=o+" = nil";return"GET_REMOVE"==l?[n,Blockly.Nelua.ORDER_HIGH]:n+"\n"}if("REMOVE"==l){var u="FROM_END"==t?Blockly.Nelua.ORDER_ADDITIVE:Blockly.Nelua.ORDER_NONE,r=Blockly.Nelua.valueToCode(e,"AT",u)||"1",u=Blockly.Nelua.nameDB_.getDistinctName("tmp_list",Blockly.VARIABLE_CATEGORY_NAME);return n=u+" = "+o+"\n"+u+"["+(r=a(u,t,r))+"] = nil\n"}var n,r=Blockly.Nelua.valueToCode(e,"AT",Blockly.Nelua.ORDER_NONE)||"0";return[n=("GET"==l?Blockly.Nelua.provideFunction_("list_get_"+t.toLowerCase(),["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(t: auto"+("FROM_END"==t||"FROM_START"==t?", at: uinteger)":")"),"  return t["+a("t",t,"at")+"]","end"]):Blockly.Nelua.provideFunction_("list_remove_"+t.toLowerCase(),["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(t: auto"+("FROM_END"==t||"FROM_START"==t?", at: uinteger)":")"),"  return t[ "+a("t",t,"at")+"] = nil","end"]))+"("+o+("FROM_END"==t||"FROM_START"==t?", "+r:"")+")",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.lists_setIndex=function(e){var l=Blockly.Nelua.valueToCode(e,"LIST",Blockly.Nelua.ORDER_HIGH)||"#[[{}]]",t=e.getFieldValue("MODE")||"SET",o=e.getFieldValue("WHERE")||"FROM_START",a=Blockly.Nelua.valueToCode(e,"AT",Blockly.Nelua.ORDER_ADDITIVE)||"0",u=Blockly.Nelua.valueToCode(e,"TO",Blockly.Nelua.ORDER_NONE)||"None",r=Blockly.Nelua.lists.getIndex_,n="";return"LAST"!=o&&"FROM_END"!=o&&"RANDOM"!=o||l.match(/^\w+$/)||(n=(e=Blockly.Nelua.nameDB_.getDistinctName("tmp_list",Blockly.VARIABLE_CATEGORY_NAME))+" = "+l+"\n",l=e),(n+="SET"==t?l+"["+r(l,o,a)+"] = "+u:l+"[#"+l+" + 1"+r(l,o,a)+("LAST"==o?" + 1":"")+"] = "+u)+"\n"},Blockly.Nelua.lists_getSublist=function(e){var l=Blockly.Nelua.valueToCode(e,"LIST",Blockly.Nelua.ORDER_NONE)||"vector(any)",t=e.getFieldValue("WHERE1"),o=e.getFieldValue("WHERE2"),a=Blockly.Nelua.valueToCode(e,"AT1",Blockly.Nelua.ORDER_NONE)||"0",u=Blockly.Nelua.valueToCode(e,"AT2",Blockly.Nelua.ORDER_NONE)||"0",e=Blockly.Nelua.lists.getIndex_;return[Blockly.Nelua.provideFunction_("list_sublist_"+t.toLowerCase()+"_"+o.toLowerCase(),["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(source: auto"+("FROM_END"==t||"FROM_START"==t?", at1: uinteger":"")+("FROM_END"==o||"FROM_START"==o?", at2: uinteger":"")+"): #[source.type]","  ## assert(source.type.is_vector)","  local t: #[source.type] = {}","  local start: uinteger = "+e("source",t,"at1"),"  local finish: uinteger = "+e("source",o,"at2"),"  for i = start - 1, finish - 1 do","    t[i] = source[i]","  end","  return t","end"])+"("+l+("FROM_END"==t||"FROM_START"==t?", "+a:"")+("FROM_END"==o||"FROM_START"==o?", "+u:"")+")",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.lists_sort=function(e){var l=Blockly.Nelua.valueToCode(e,"LIST",Blockly.Nelua.ORDER_NONE)||"vector(any)",t="0"===e.getFieldValue("DIRECTION")?1:-1,e=e.getFieldValue("TYPE");return[Blockly.Nelua.provideFunction_("list_sort",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(list: auto, typev: auto, direction: uinteger)","  ## assert(list.type.is_vector)","  local function partition(array: auto, left: uinteger, right: uinteger, pivotIndex: uinteger): number","    ## assert(array.type.is_vector)","    local pivotValue = array[pivotIndex]","    array[pivotIndex], array[right] = array[right], array[pivotIndex]","    local storeIndex: uinteger = left","    for i = left - 1, right - 1 do","      if array[i] <= pivotValue then","        array[i], array[storeIndex] = array[storeIndex], array[i]","        storeIndex = storeIndex + 1","      end","      array[storeIndex], array[right] = array[right], array[storeIndex]","    end","    return storeIndex","  end","  local function quicksort(array: auto, left: uinteger, right: uinteger)","    ## assert(array.type.is_vector)","    if right > left then","      quicksort(array, left, pivotNewIndex - 1)","      quicksort(array, pivotNewIndex, right)","    end","  end","  local t: #[list.type] = {}","  local i: uinteger = 0","  for n, v in pairs(list) do","    t[i] = v","    i = i + 1","  end","  ##[[local compareFuncs = {","    NUMERIC = function(a, b)","      return (tonumber(tostring(a)) or 0)","          < (tonumber(tostring(b)) or 0) end,","    TEXT = function(a, b)","      return tostring(a) < tostring(b) end,","    IGNORE_CASE = function(a, b)","      return string.lower(tostring(a)) < string.lower(tostring(b)) end","  }]]","  local compareTemp = #[[compareFuncs[typev]]]","  local compare = compareTemp","  if direction == -1","  then compare = function(a, b) return compareTemp(b, a) end","  end","  quicksort(t, ##[[compare]])","  return t","end"])+"("+l+',"'+e+'", '+t+")",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.lists_split=function(e){var l,t=Blockly.Nelua.valueToCode(e,"INPUT",Blockly.Nelua.ORDER_NONE),o=Blockly.Nelua.valueToCode(e,"DELIM",Blockly.Nelua.ORDER_NONE)||"''",e=e.getFieldValue("MODE");if("SPLIT"==e)t=t||"''",l=Blockly.Nelua.provideFunction_("list_string_split",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(input: string, delim: string): #[t.type]","  local t: #[t.type] = {}","  local pos: uinteger = 0","  while true do","    next_delim = string.find(input, delim, pos)","    if next_delim == nil then","      t[#t + 1] = string.sub(input, pos))","      break","    else","      t[#t + 1] = string.sub(input, pos, next_delim-1))","      pos = next_delim + #delim","    end","  end","  return t","end"]);else{if("JOIN"!=e)throw Error("Unknown mode: "+e);t=t||"##[[{}]]",l="table.concat"}return["##[["+l+"("+t+", "+o+")]]",Blockly.Nelua.ORDER_HIGH]},Blockly.Nelua.lists_reverse=function(e){e=Blockly.Nelua.valueToCode(e,"LIST",Blockly.Nelua.ORDER_NONE)||"##[[{}]]";return[Blockly.Nelua.provideFunction_("list_reverse",["local function "+Blockly.Nelua.FUNCTION_NAME_PLACEHOLDER_+"(input: auto): #[input.type]","  ## assert(input.type.is_vector)","  local reversed: #[input.type] = {}","  local count: uinteger = 0","  for i = #input - 1, 0, -1 do","    reversed[count] = input[i]","    count = count + 1","  end","  return reversed","end"])+"("+e+")",Blockly.Nelua.ORDER_HIGH]};
  
  return Blockly.Nelua;
}));

//# sourceMappingURL=nelua_compressed.js.map
